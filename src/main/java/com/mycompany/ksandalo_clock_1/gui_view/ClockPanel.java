/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.mycompany.ksandalo_clock_1.gui_view;

import com.mycompany.ksandalo_clock_1.clock.CArrow;
import com.mycompany.ksandalo_clock_1.clock.Clock_ws;
import com.mycompany.ksandalo_clock_1.clock.IClock;
import java.awt.BasicStroke;
import java.awt.Color;
import java.awt.Graphics;
import java.awt.Graphics2D;

/**
 *
 * @author sanda
 */
public class ClockPanel extends javax.swing.JPanel {
    
    IClock clock;
    
    public ClockPanel() {
        this.clock = new Clock_ws();
        this.clock.setValue(10, CArrow.HOUR);
        this.clock.setValue(30, CArrow.MINUTE);
        this.clock.setValue(0, CArrow.SECOND);
        initComponents();
    }
    public ClockPanel(IClock clock) {
        this.clock = clock;
        initComponents();
    }
    
    public void Update() {
        this.repaint();
    }

    @Override
    public void paintComponent(Graphics g) {
        super.paintComponent(g);
        
        Graphics2D g2d = (Graphics2D)g;
        
        g2d.setStroke(new BasicStroke(2));
        
        int clockRadius = (int)(Math.min(this.getWidth(),
                this.getHeight()) * 0.8 * 0.5);
        int xCenter = this.getWidth() / 2;
        int yCenter = this.getHeight() / 2;
        
        g2d.setColor(Color.black);
        g2d.drawOval(xCenter - clockRadius,
                yCenter - clockRadius,
                2 * clockRadius,
                2 * clockRadius);
        g2d.drawString("12", xCenter - 5,
                yCenter - clockRadius + 12);
        g2d.drawString("9", xCenter - clockRadius + 3,
                yCenter + 5);
        g2d.drawString("3", xCenter + clockRadius - 10,
                yCenter + 3);
        g2d.drawString("6", xCenter - 3,
                yCenter + clockRadius - 3);
        
        
        if (this.clock.getValue(CArrow.SECOND) >= 0) {
            // Draw the second hand
            int sLength = (int)(clockRadius * 0.8);
            int xSecond = (int)(xCenter +
                    sLength *
                    Math.sin(
                        this.clock.getValue(CArrow.SECOND) *
                        (2 * Math.PI / 60)));
            int ySecond = (int)(yCenter -
                    sLength *
                    Math.cos(
                        this.clock.getValue(CArrow.SECOND) *
                        (2 * Math.PI / 60)));
            g2d.setColor(Color.red);
            g2d.drawLine(xCenter, yCenter,
                        xSecond, ySecond);
        }
  
        // Draw the minute hand
        int mLength = (int)(clockRadius * 0.8);
        int xMinute = (int)(xCenter +
                mLength *
                Math.sin(
                    this.clock.getValue(CArrow.MINUTE) *
                    (2 * Math.PI / 60)));
        int yMinute = (int)(yCenter -
                mLength *
                Math.cos(
                    this.clock.getValue(CArrow.MINUTE) *
                    (2 * Math.PI / 60)));
        g2d.setColor(Color.yellow);
        g2d.drawLine(xCenter, yCenter,
                    xMinute, yMinute);
  
        // Draw the hour hand
        int hLength = (int)(clockRadius * 0.5);
        int xHour = (int)(xCenter +
                hLength *
                Math.sin(
                    (this.clock.getValue(CArrow.HOUR) % 12 +
                    this.clock.getValue(CArrow.MINUTE) / 60.0) *
                    (2 * Math.PI / 12)));
        int yHour = (int)(yCenter -
                hLength *
                Math.cos(
                    (this.clock.getValue(CArrow.HOUR) % 12 +
                    this.clock.getValue(CArrow.MINUTE) / 60.0) *
                    (2 * Math.PI / 12)));
        g2d.setColor(Color.black);
        g2d.drawLine(xCenter, yCenter, xHour, yHour);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 394, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 294, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
}
